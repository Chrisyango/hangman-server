'use strict';var cov_ot04duxpc=function(){var path='E:\\WebDevelopment\\hangman\\hangman-server\\routes\\words.js',hash='8819057128f94afa61863a585ec9211268d7675a',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'E:\\WebDevelopment\\hangman\\hangman-server\\routes\\words.js',statementMap:{'0':{start:{line:3,column:16},end:{line:3,column:34}},'1':{start:{line:4,column:15},end:{line:4,column:31}},'2':{start:{line:5,column:19},end:{line:5,column:48}},'3':{start:{line:7,column:14},end:{line:7,column:40}},'4':{start:{line:10,column:0},end:{line:18,column:3}},'5':{start:{line:11,column:2},end:{line:17,column:7}},'6':{start:{line:13,column:6},end:{line:13,column:24}},'7':{start:{line:16,column:6},end:{line:16,column:16}},'8':{start:{line:32,column:0},end:{line:32,column:24}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:10,column:33},end:{line:10,column:34}},loc:{start:{line:10,column:53},end:{line:18,column:1}},line:10},'1':{name:'(anonymous_1)',decl:{start:{line:12,column:10},end:{line:12,column:11}},loc:{start:{line:12,column:21},end:{line:14,column:5}},line:12},'2':{name:'(anonymous_2)',decl:{start:{line:15,column:11},end:{line:15,column:12}},loc:{start:{line:15,column:18},end:{line:17,column:5}},line:15}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0},f:{'0':0,'1':0,'2':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_ot04duxpc.s[0]++,require('express'));const router=(cov_ot04duxpc.s[1]++,express.Router());const bodyParser=(cov_ot04duxpc.s[2]++,require('body-parser').json());const Words=(cov_ot04duxpc.s[3]++,require('../models/words'));/* ========== GET/READ ALL ITEM ========== */cov_ot04duxpc.s[4]++;router.get('/words',bodyParser,(req,res,next)=>{cov_ot04duxpc.f[0]++;cov_ot04duxpc.s[5]++;Words.find().then(results=>{cov_ot04duxpc.f[1]++;cov_ot04duxpc.s[6]++;res.json(results);}).catch(err=>{cov_ot04duxpc.f[2]++;cov_ot04duxpc.s[7]++;next(err);});});/* ========== GET/READ AN ITEM BY ID ========== */// router.get('/users/:id', bodyParser, (req, res, next) => {
//   const {id} = req.params;
//   User.findById({_id: id})
//     .then(results => {
//       res.json(results);
//     })
//     .catch(err => {
//       next(err);
//     });
// });
cov_ot04duxpc.s[8]++;module.exports=router;